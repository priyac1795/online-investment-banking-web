[{"/Users/priyamanoj/online-investment-app/src/index.js":"1","/Users/priyamanoj/online-investment-app/src/App.js":"2","/Users/priyamanoj/online-investment-app/src/reportWebVitals.js":"3","/Users/priyamanoj/online-investment-app/src/components/ListFinancialAdvisorComponent.jsx":"4","/Users/priyamanoj/online-investment-app/src/services/FinancialAdvisorService.js":"5","/Users/priyamanoj/online-investment-app/src/components/HeaderComponent.jsx":"6","/Users/priyamanoj/online-investment-app/src/components/FooterComponent.jsx":"7","/Users/priyamanoj/online-investment-app/src/components/CreateFinancialAdvisorComponent.jsx":"8","/Users/priyamanoj/online-investment-app/src/components/UpdateFinancialAdvisor.jsx":"9","/Users/priyamanoj/online-investment-app/src/components/RiskToleranceComponent.jsx":"10","/Users/priyamanoj/online-investment-app/src/components/DialogFragmentComponent.jsx":"11","/Users/priyamanoj/online-investment-app/src/components/CustomerInvestmentProfileComponent.jsx":"12","/Users/priyamanoj/online-investment-app/src/services/CustomerService.js":"13","/Users/priyamanoj/online-investment-app/src/services/EducationGoalService.js":"14","/Users/priyamanoj/online-investment-app/src/components/GoalsForLowRiskComponent.jsx":"15","/Users/priyamanoj/online-investment-app/src/components/LowRiskGoalsComponent.jsx":"16","/Users/priyamanoj/online-investment-app/src/components/MediumRiskGoalComponent.jsx":"17","/Users/priyamanoj/online-investment-app/src/transitions/fadeTransition.jsx":"18","/Users/priyamanoj/online-investment-app/src/components/CustomerLoginComponent.jsx":"19","/Users/priyamanoj/online-investment-app/src/components/FAGenerateReport.jsx":"20","/Users/priyamanoj/online-investment-app/src/components/LoginBoxComponent.jsx":"21","/Users/priyamanoj/online-investment-app/src/components/RegisterBoxComponent.jsx":"22","/Users/priyamanoj/online-investment-app/src/components/HomeComponent.jsx":"23","/Users/priyamanoj/online-investment-app/src/components/AboutUsComponent.jsx":"24","/Users/priyamanoj/online-investment-app/src/components/ContactUsComponent.jsx":"25","/Users/priyamanoj/online-investment-app/src/components/HighRiskComponent.jsx":"26"},{"size":591,"mtime":1614020750964,"results":"27","hashOfConfig":"28"},{"size":2935,"mtime":1619661394136,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1610844888041,"results":"30","hashOfConfig":"28"},{"size":2499,"mtime":1619662647627,"results":"31","hashOfConfig":"28"},{"size":2017,"mtime":1619540754038,"results":"32","hashOfConfig":"28"},{"size":866,"mtime":1619030425860,"results":"33","hashOfConfig":"28"},{"size":324,"mtime":1610996146185,"results":"34","hashOfConfig":"28"},{"size":4438,"mtime":1617481741796,"results":"35","hashOfConfig":"28"},{"size":4984,"mtime":1618618860864,"results":"36","hashOfConfig":"28"},{"size":5998,"mtime":1619662991692,"results":"37","hashOfConfig":"28"},{"size":1653,"mtime":1615938206382,"results":"38","hashOfConfig":"28"},{"size":2910,"mtime":1619023869084,"results":"39","hashOfConfig":"28"},{"size":936,"mtime":1619453604376,"results":"40","hashOfConfig":"28"},{"size":297,"mtime":1616890489937,"results":"41","hashOfConfig":"28"},{"size":1091,"mtime":1617472334880,"results":"42","hashOfConfig":"28"},{"size":8301,"mtime":1620394329097,"results":"43","hashOfConfig":"28"},{"size":6902,"mtime":1619641524265,"results":"44","hashOfConfig":"28"},{"size":1100,"mtime":1618850384088,"results":"45","hashOfConfig":"28"},{"size":1946,"mtime":1619024043931,"results":"46","hashOfConfig":"28"},{"size":4741,"mtime":1619662466979,"results":"47","hashOfConfig":"28"},{"size":1303,"mtime":1619024272644,"results":"48","hashOfConfig":"28"},{"size":2355,"mtime":1619024040507,"results":"49","hashOfConfig":"28"},{"size":1641,"mtime":1620142569014,"results":"50","hashOfConfig":"28"},{"size":496,"mtime":1619661804113,"results":"51","hashOfConfig":"28"},{"size":679,"mtime":1619030502921,"results":"52","hashOfConfig":"28"},{"size":5423,"mtime":1619641361260,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"102bdw1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},"/Users/priyamanoj/online-investment-app/src/index.js",[],["120","121"],"/Users/priyamanoj/online-investment-app/src/App.js",["122"],"import logo from './logo.svg';\nimport './App.css';\nimport ListFinancialAdvisor from './components/ListFinancialAdvisorComponent';\nimport CreateFinancialAdvisor from './components/CreateFinancialAdvisorComponent';\nimport UpdateFinancialAdvisor from './components/UpdateFinancialAdvisor';\nimport CustomerLoginComponent from './components/CustomerLoginComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport AboutUsComponent  from './components/AboutUsComponent';\nimport RiskToleranceComponent from './components/RiskToleranceComponent';\nimport DialogFragmentComponent from './components/DialogFragmentComponent';\nimport CustomerInvestmentProfile from './components/CustomerInvestmentProfileComponent';\nimport DisabilityInvestmentComponent from './components/MediumRiskGoalComponent'\nimport HomeComponent from './components/HomeComponent';\nimport FAGenerateReport from './components/FAGenerateReport';\nimport ContactUsComponent from './components/ContactUsComponent';\nimport HighRiskComponent from './components/HighRiskComponent';\n\nfunction App() {\n\n  return (\n    <div>\n      <Router>\n      <HeaderComponent/>\n      <div className=\"page-container\">\n        <div id=\"content-wrap\">\n        <Switch>\n          <Route path=\"/online_investment_banking\" exact component={ListFinancialAdvisor}></Route>\n          <Route path=\"/online_investment_banking/getFAlist\" component={ListFinancialAdvisor}></Route>\n          <Route path=\"/online_investment_banking/createFA\" component={CreateFinancialAdvisor}></Route>\n          <Route path=\"/online_investment_banking/getFA/:id\" component={UpdateFinancialAdvisor}></Route>\n          <Route path=\"/online_investment_banking/loginCustomer\" component={CustomerLoginComponent}></Route>\n          <Route path=\"/online_investment_banking/riskTolerance\" component={RiskToleranceComponent}></Route>\n          <Route path=\"/online_investment_banking/goalDialog\" component={DialogFragmentComponent}></Route>\n          <Route path=\"/online_investment_banking/createCustomer\" component={CustomerInvestmentProfile}></Route>\n          <Route path=\"/online_investment_banking/medRiskGoal\" component={DisabilityInvestmentComponent}></Route>\n          <Route path=\"/online_investment_banking/generateReportByFA\" component={FAGenerateReport}></Route>\n          <Route path=\"/online_investment_banking/home\" component={HomeComponent}></Route>\n          <Route path=\"/online_investment_banking/aboutUs\" component={AboutUsComponent}></Route>\n          <Route path=\"/online_investment_banking/contactUs\" component={ContactUsComponent}></Route>\n          <Route path=\"/online_investment_banking/highRiskGoal\" component={HighRiskComponent}></Route>\n\n      </Switch>\n      </div>\n    </div>\n    <FooterComponent/>\n    </Router> \n    </div>\n  );\n}\n\nexport default App;\n","/Users/priyamanoj/online-investment-app/src/reportWebVitals.js",[],"/Users/priyamanoj/online-investment-app/src/components/ListFinancialAdvisorComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/services/FinancialAdvisorService.js",[],"/Users/priyamanoj/online-investment-app/src/components/HeaderComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/FooterComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/CreateFinancialAdvisorComponent.jsx",["123"],"import React, { Component } from 'react';\nimport FinancialAdvisorService from \"../services/FinancialAdvisorService\";\nclass CreateFinancialAdvisor extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        emailId: '',\n        mobileNo: '',\n        branchNo: '',\n        financialAdvisor: []\n      }\n\n    changeFirstNameHandler = (e)=>{\n        this.setState({firstName : e.target.value});\n    }\n    changeLastNameHandler = (e)=>{\n        this.setState({lastName : e.target.value});\n    }\n    changeEmailIdHandler = (e)=>{\n        this.setState({emailId : e.target.value});\n    }\n    changeMobileNoHandler = (e)=>{\n        this.setState({mobileNo : e.target.value});\n    }\n    changeBranchNoHandler = (e)=>{\n        this.setState({branchNo : e.target.value});\n    }\n\n    saveFinancialAdvisor= (e)=>{\n        e.preventDefault();\n        this.state.financialAdvisor = {\n            firstName: this.state.firstName, \n            lastName: this.state.lastName, \n            emailId: this.state.emailId, \n            mobileNo: this.state.mobileNo, \n            branchNo: this.state.branchNo\n         };\n        console.log(JSON.stringify(this.state.financialAdvisor));\n\n        FinancialAdvisorService.createFA(this.state.financialAdvisor).then( response =>{\n           this.props.history.push('/online_investment_banking/getFAlist')\n        } );\n    }\n    cancel = ()=>{\n        this.props.history.push('/online_investment_banking/getFAlist');\n    }\n    render() { \n        return (\n            <div>\n                <div className=\"container\">\n                   <div className=\"row\">\n                       <div className=\"card col-md-6 offset-md-3 offset-md-3\" style={{marginTop: \"30px\"}}>\n                           <h3 className= \"text-center\"> Add Financial Advisor</h3>\n                             <div className=\"card-body\">\n                                 <form>\n                                     <div className=\"form-group\">\n                                         <label>First Name:</label>\n                                         <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\n                                          value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\n\n                                     </div>\n                                     <div className=\"form-group\">\n                                         <label>Last Name:</label>\n                                         <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\"\n                                          value={this.state.lastName} onChange={this.changeLastNameHandler} />\n\n                                     </div>\n                                     <div className=\"form-group\">\n                                         <label>Email ID:</label>\n                                         <input placeholder=\"Email ID\" name=\"emailId\" className=\"form-control\"\n                                          value={this.state.emailId} onChange={this.changeEmailIdHandler} />\n\n                                     </div>\n                                     <div className=\"form-group\">\n                                         <label>Mobile Number:</label>\n                                         <input placeholder=\"Mobile Number\" name=\"mobileNo\" className=\"form-control\"\n                                          value={this.state.mobileNo} onChange={this.changeMobileNoHandler} />\n\n                                     </div>\n                                     <div className=\"form-group\">\n                                         <label>Branch Number:</label>\n                                         <input placeholder=\"Branch Number\" name=\"branchNo\" className=\"form-control\"\n                                          value={this.state.branchNo} onChange={this.changeBranchNoHandler} />\n\n                                     </div>\n                                     <button className=\"btn btn-success\" onClick={this.saveFinancialAdvisor}>Save</button>\n                                     <button className=\"btn btn-danger\" onClick={this.cancel} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                 </form>\n\n                             </div>\n\n                       </div>\n\n                   </div>\n                </div>\n            </div>\n            \n            );\n    }\n}\n \nexport default CreateFinancialAdvisor;","/Users/priyamanoj/online-investment-app/src/components/UpdateFinancialAdvisor.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/RiskToleranceComponent.jsx",["124","125","126","127"],"import React, { Component } from 'react';\nimport DialogFragmentComponent from './DialogFragmentComponent';\nclass RiskToleranceComponent extends Component {\n    \n    state = { \n\n        lowRisk : 0,\n        medRisk : 0,\n        highRisk : 0,\n        risk: ''\n     }\n     \n    styles = {\n        fontSize: 18\n    }\n\n    onClickLowRisk = () =>{\n        this.setState({lowRisk : this.state.lowRisk +1});\n    }    \n    onClickMedRisk = () =>{\n        this.setState({medRisk : this.state.medRisk +1});\n    }   \n    \n    onClickHighRisk = () =>{\n        this.setState({highRisk : this.state.highRisk +1});\n    } \n \n    formSubmit =(e) =>{\n       e.preventDefault();\n       if(this.state.lowRisk === 2 || this.state.lowRisk > 2)\n       {\n           \n       console.log(\"Low risk\")\n       this.setState({risk: \"LowRisk\"})\n       this.state.lowRisk =0\n       this.props.history.push(\"/online_investment_banking/createCustomer\")\n       }\n       else if(this.state.medRisk ===2 || this.state.medRisk >2){\n       console.log(\"Med risk\")\n       this.setState({risk: \"MediumRisk\"})\n       this.state.medRisk =0\n       this.props.history.push(\"/online_investment_banking/medRiskGoal\")\n       }\n       else{\n           console.log(\"High Risk\")\n           this.setState({risk: \"HighRisk\"})\n           this.state.highRisk =0\n           this.props.history.push(\"/online_investment_banking/highRiskGoal\")\n       }\n    }\n\n    render() { \n        return (\n            <form onSubmit={this.formSubmit}>\n             <div className=\"container\">\n            <div className=\"title\">\n              <h1>Risk Tolerance Questionnaire</h1>\n            </div>\n           \n            <div >\n              <h2>What is your comfort with Risk?</h2>\n            </div>\n            <div className=\"question-text\" style={this.styles} >\n            1. How comfort are you about inflation(the risk your money will buy fewer goods and services in the future because of raising prices)?  \n            <div className=\"radio\"  >\n            <input\n              type=\"radio\"\n              name=\"Q1\"\n              value=\"low\"\n              onClick={this.onClickLowRisk}\n            />\n              My goal is to minimize swings in my portfolios value(low risk)\n             \n        </div>\n        <div className=\"radio\" >\n       \n            <input\n              type=\"radio\"\n              name=\"Q1\"\n              value=\"med\"\n              onClick={this.onClickMedRisk}\n            />\n              My goal is for growth to at least keep pace with inflation(med risk)\n        \n        </div>\n        <div className=\"radio\" >\n         \n            <input\n              type=\"radio\"\n              name=\"Q1\"\n              value=\"high\"\n              onClick={this.onClickHighRisk}\n            />\n              My goal is for growth to exceed inflation(high risk)\n         \n        </div>\n            </div>\n      <br/>\n            <div className=\"question-text\" style={this.styles}>\n            2. Which statement best describes your personal investment philosophy\n            <div className=\"radio\" id=\"Q2option1\" >\n        \n            <input\n              type=\"radio\"\n              id=\"Q2option1\"\n              name=\"Q2\"\n              value=\"low\"\n              onClick={this.onClickLowRisk}\n            />\n              Income (low risk)\n             \n        </div>\n        <div className=\"radio\" id=\"Q2option2\" >\n       \n            <input\n              type=\"radio\"\n              id=\"Q2option2\"\n              name=\"Q2\"\n              value=\"med\"\n              onClick={this.onClickMedRisk}\n            />\n              Growth and income (medium risk)\n        \n        </div>\n        <div className=\"radio\" id=\"Q2option3\">\n         \n            <input\n              type=\"radio\"\n              id=\"Q2option3\"\n              name=\"Q2\"\n              value=\"high\"\n              onClick={this.onClickHighRisk}\n            />\n               Growth (high risk)\n         \n        </div>\n            </div>\n         <br/>\n            <div className=\"question-text\" style={this.styles}>\n            3. Are you willing to take short term fluctuations\n            <div className=\"radio\" id=\"Q2option1\" >\n        \n            <input\n              type=\"radio\"\n              id=\"Q3option1\"\n              name=\"Q3\"\n              value=\"low\"\n              onClick={this.onClickLowRisk}\n            />\n              Yes\n             \n        </div>\n        <div className=\"radio\" id=\"Q3option2\" >\n       \n            <input\n              type=\"radio\"\n              id=\"Q3option2\"\n              name=\"Q3\"\n              value=\"med\"\n              onClick={this.onClickMedRisk}\n            />\n             No\n        \n        </div>\n        <br/>\n        <div className=\"question-text\" style={this.styles}>\n        4. If the market has dropped 25% or more in a year, how would you react\n            <div className=\"radio\" id=\"Q4option1\" >\n        \n            <input\n              type=\"radio\"\n              id=\"Q4option1\"\n              name=\"Q4\"\n              value=\"low\"\n              onClick={this.onClickLowRisk}\n            />\n               I would rebalance my portfolio \n             \n        </div>\n        <div className=\"radio\" id=\"Q3option2\" >\n       \n            <input\n              type=\"radio\"\n              id=\"Q4option2\"\n              name=\"Q4\"\n              value=\"med\"\n              onClick={this.onClickMedRisk}\n            />\n              I would not react much \n        \n        </div>\n        <div className=\"radio\" id=\"Q3option3\">\n         \n            <input\n              type=\"radio\"\n              id=\"Q4option3\"\n              name=\"Q4\"\n              value=\"high\"\n              onClick={this.onClickHighRisk}\n            />\n             I would buy more\n         \n        </div>\n            </div>\n            </div>\n        \n        <br/>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Submit\n        </button>\n        </div>\n        </form> \n        );\n        \n    }\n}\n \nexport default RiskToleranceComponent;","/Users/priyamanoj/online-investment-app/src/components/DialogFragmentComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/CustomerInvestmentProfileComponent.jsx",["128","129"],"import React, { Component } from 'react';\nimport CustomerService from '../services/CustomerService';\nimport { Card} from 'react-bootstrap';\nimport EducationGoalComponent from './LowRiskGoalsComponent';\nimport LowRiskGoalsComponent from './LowRiskGoalsComponent';\n\n\nclass CustomerInvestmentProfile extends Component {\n    state = {\n        customerName: '',\n        customerAge: '',\n        annualIncome: '',\n        amtForInvestment: '',\n        goalInfo: [],\n        customerInfo:[]\n      }\n\n      changeCustomerNameHandler = (e)=>{\n        this.setState({customerName : e.target.value});\n    }\n    changeCustomerAgeHandler = (e)=>{\n        this.setState({customerAge : e.target.value});\n    }\n    changeAnnualIncomeHandler = (e)=>{\n        this.setState({annualIncome : e.target.value});\n    }\n    changeAmtForInvestmentHandler = (e)=>{\n        this.setState({amtForInvestment : e.target.value});\n    }\n    \n    getGoal=(goalInfoFromChild)=>{\n        console.log(JSON.stringify(goalInfoFromChild));\n       this.setState({\n           goalInfo : goalInfoFromChild\n       })\n       this.state.customerInfo = {\n        customerName: this.state.customerName, \n        customerAge: this.state.customerAge, \n        annualIncome: this.state.annualIncome, \n        amtForInvestment: this.state.amtForInvestment, \n        goalInfo: goalInfoFromChild\n     };\n     console.log(JSON.stringify(this.state.customerInfo))\n       CustomerService.createCustomer(this.state.customerInfo).then( response =>{\n         } );\n\n    }\n\n    render() { \n        return (\n            <div>\n                <Card>\n                 <Card.Header as=\"h5\">Customer Information  \n  </Card.Header>\n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n            \n        <tr><td><label>Customer Name:</label></td>\n         <td> <input name=\"customerName\"\n        value={this.state.customerName} onChange={this.changeCustomerNameHandler}/></td>\n        </tr> \n      \n        <tr>\n         <td> <div><label>Age:</label></div></td>\n         <td> <input name=\"customerAge\"\n        value={this.state.customerAge} onChange={this.changeCustomerAgeHandler}/></td>\n      </tr>\n  \n         <tr> \n         <td><label>Annual Income:</label></td>\n         <td> <input name=\"annualIncome\"\n        value={this.state.annualIncome} onChange={this.changeAnnualIncomeHandler}/></td>\n      </tr>\n      <tr>\n         <td> <label>Amount For Investment:</label></td>\n         <td> <input name=\"amtForInvestment\"\n        value={this.state.amtForInvestment} onChange={this.changeAmtForInvestmentHandler}/></td>\n      </tr>\n     \n      </table>\n     </form>\n    </Card.Text>\n    \n  </Card.Body>\n</Card>\n<div>\n    <LowRiskGoalsComponent customerAmtForInvest = {this.state.amtForInvestment} getGoalMethod={ this.getGoal}/>\n</div>\n              \n            </div>\n            \n            );\n    }\n}\n \nexport default CustomerInvestmentProfile;\n\n\n\n     \n    \n","/Users/priyamanoj/online-investment-app/src/services/CustomerService.js",["130"],"import axios from 'axios';\n\nconst CreateCust_URL = \"http://localhost:8080/online_investment_banking/createCustomer\";\nconst CreateCustForMedRisk_URL = \"http://localhost:8080/online_investment_banking/createCustomerForMedRisk\";\nconst CreateCustForHighRisk_URL = \"http://localhost:8080/online_investment_banking/createCustomerForHighRisk\";\nconst GetAllCust__URL = \"http://localhost:8080/online_investment_banking/getFAlist\";\n\nclass CustomerService  {\n    \n    createCustomer(customerInvestmentProfile){\n        return axios.post(CreateCust_URL, customerInvestmentProfile);\n    }\n    \n    createCustomerForMedRisk(mediumRiskgoal){\n        return axios.post(CreateCustForMedRisk_URL, mediumRiskgoal);\n    }\n    getAllCustomerInfo(){\n        return axios.get(GetAllCust__URL);\n    }\n\n    createCustomerForHighRisk(highRiskgoal){\n        return axios.post(CreateCustForHighRisk_URL, highRiskgoal);\n    }\n}\n \nexport default new CustomerService;","/Users/priyamanoj/online-investment-app/src/services/EducationGoalService.js",["131"],"import axios from 'axios';\n\nconst EducationGoal_URL = \"http://localhost:8080/online_investment_banking/educationGoal\";\n\nclass EducationGoalService{\n\n    createEducationGoal(educationGoal){\n        return axios.post(EducationGoal_URL, educationGoal)\n    }\n}\nexport default new EducationGoalService;",["132","133"],"/Users/priyamanoj/online-investment-app/src/components/GoalsForLowRiskComponent.jsx",[],["134","135"],"/Users/priyamanoj/online-investment-app/src/components/LowRiskGoalsComponent.jsx",["136","137","138","139"],"\nimport React, { Component } from 'react';\nimport { Card} from 'react-bootstrap';\nimport EducationGoalService from '../services/EducationGoalService';\nimport CustomerService from '../services/CustomerService';\n\nclass LowRiskGoalsComponent extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n        name:'',\n        age:'',\n        relationship:'',\n        schoolName:'',\n        annualFee:'',\n        percentToPay:'',\n        totAmtForInvest:'',\n         amtToInvestEduGoal:'',\n         balance:'',\n         customerInfoList:[],\n         show: false,\n         showSavingsGoal: false,\n         lowRiskGoal:[],\n         balanceForSavings:'',\n         savingsFor:'',\n         estimatedCost:'',\n         monthlySavings:'',\n         balance:''\n     }\n    }\n  \n\n     changeNameHandler = (e) =>{\n         this.setState({name: e.target.value})\n     }\n     changeAgeHandler = (e) =>{\n         this.setState({age: e.target.value})\n     }\n     onClickSpouse =(e)=>{\n         this.setState({relationship: e.target.value })\n     }\n     onClickChild =(e)=>{\n        this.setState({relationship: e.target.value })\n    }\n    onClickOthers =(e)=>{\n        this.setState({relationship: e.target.value })\n    }\n    changeSchoolNameHandler=(e)=>{\n        this.setState({schoolName: e.target.value})\n    }\n    changeAnnualFeeHandler=(e)=>{\n        this.setState({annualFee: e.target.value})\n    }\n    changePercentToPayHandler=(e)=>{\n        this.setState({percentToPay: e.target.value})\n    }\n    changeTotAmtForInvest=(e)=>{\n      this.setState({totAmtForInvest: e.target.value})\n    //this.state.amtToInvest = (this.state.totAmtForInvest)*(this.state.percentToPay)/100\n    }\n    changeAmtToInvestEduGoal=(e)=>{\n      this.setState({amtToInvestEduGoal: e.target.value})\n      console.log(\"Amt to edu\"+this.state.amtToInvestEduGoal)\n    //this.state.amtToInvest = (this.state.totAmtForInvest)*(this.state.percentToPay)/100\n    }\n    changeBalanceForSavings=(e)=>{\n      this.setState({balanceForSavings: e.target.value})\n    }\n    changeAnnualIncomeHandler=(e)=>{\n      this.setState({annualIncome: e.target.value})\n    }\n    changeAmtForInvestmentHandler=(e)=>{\n      this.setState({amtForInvestment: e.target.value})\n    }\n    changeSavingsForHandler =(e) =>{\n      this.setState({savingsFor: e.target.value})\n    }\n    changeEstimatedCostHandler =(e)=>{\n      this.setState({estimatedCost: e.target.value})\n    }\n\n\nshowBody =()=>{\n  this.setState({\n    show : !this.state.show\n  })\n}\nshowSavingsGoalBody =()=>{\n  this.setState({\n    showSavingsGoal: !this.state.showSavingsGoal\n  })\n}\n\n    saveInvestmentDetails=(e)=>{\n      e.preventDefault();\n      \n     console.log(\"Customer ID\"+this.state.customerInfoList.customerId)    \n         this.state.lowRiskGoal = [\n           {\n            name: this.state.name, \n            age: this.state.age, \n            relationship: this.state.relationship, \n            schoolName: this.state.schoolName, \n            annualFee: this.state.annualFee,\n            percentToPay: this.state.percentToPay,\n            totAmtForInvest: this.props.customerAmtForInvest,\n            amtToInvestEduGoal: parseFloat((this.props.customerAmtForInvest)*(this.state.percentToPay)/100).toFixed(2),\n            balance: parseFloat(((this.props.customerAmtForInvest)-((this.props.customerAmtForInvest)*(this.state.percentToPay)/100) - this.state.estimatedCost)).toFixed(2),\n          savingsFor: this.state.savingsFor,\n          estimatedCost: this.state.estimatedCost,\n          monthlySavings: parseFloat(this.state.estimatedCost/12).toFixed(2)\n        }\n        ];\n         console.log(JSON.stringify(this.state.lowRiskGoal));\n   \n    }\n   render() { \n        return ( \n          <div>\n            <h1>Low Risk</h1>\n              <Card>\n  <Card.Header as=\"h5\">Education Goal\n  <button onClick = {this.showBody} className = \"btn btn-info m-2\" >Click</button>\n  </Card.Header>\n  { this.state.show ? \n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n            \n        <tr><td><label>Beneficiary Name:</label></td>\n         <td> <input name=\"name\"\n        value={this.state.name} onChange={this.changeNameHandler}/></td>\n        </tr> \n      \n        <tr>\n         <td> <div><label>Age:</label></div></td>\n         <td> <input name=\"age\"\n        value={this.state.age} onChange={this.changeAgeHandler}/></td>\n      </tr>\n     <tr>\n         <td> <label>Relationship:</label></td>\n          \n         <input type=\"radio\" name=\"relationship\" value=\"spouse\"  onClick={this.onClickSpouse}/>\n  <label htmlFor=\"spouse\">Spouse</label>\n  <input type=\"radio\" name=\"relationship\" value=\"child\" onClick={this.onClickChild}/>\n  <label htmlFor=\"child\">Child</label>\n  <input type=\"radio\"  name=\"relationship\" value=\"others\" onClick={this.onClickOthers}/>\n  <label htmlFor=\"others\">Others</label>\n  </tr>  \n\n         <tr> \n         <td><label>School Name:</label></td>\n         <td> <input name=\"schoolName\"\n        value={this.state.schoolName} onChange={this.changeSchoolNameHandler}/></td>\n      </tr>\n      <tr>\n         <td> <label>Annual cost/fee:</label></td>\n         <td> <input name=\"annualFee\"\n        value={this.state.annualFee} onChange={this.changeAnnualFeeHandler}/></td>\n      </tr>\n      <tr>\n         <td> <label>% you plan to pay for:</label></td>\n         <td> <input name=\"percentToPay\"\n        value={this.state.percentToPay} onChange={this.changePercentToPayHandler}/></td>\n      </tr>\n      <tr>\n         <td> <label> Amount to invest per annum:</label></td>\n         <td> <input readOnly name=\"amtToInvestEduGoal\"\n        value={parseFloat((this.props.customerAmtForInvest)*(this.state.percentToPay)/100).toFixed(2)} \n        onChange={this.changeAmtToInvestEduGoal}\n        /></td>\n      </tr>\n      <tr>\n     \n        </tr>\n      </table>\n     </form>\n    </Card.Text>\n    \n  </Card.Body>\n : null}\n</Card>\n\n<Card>\n  <Card.Header as=\"h5\">Savings Goal\n  <button onClick = {this.showSavingsGoalBody} className = \"btn btn-info m-2\">Click</button>\n  </Card.Header>\n  { this.state.showSavingsGoal ? \n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n            <tr>\n         <td> <label>Balance Investment amount for savings:</label></td>\n         <td> <input readOnly name=\"balanceForSavings\"\n        value={parseFloat((this.props.customerAmtForInvest)-((this.props.customerAmtForInvest)*(this.state.percentToPay)/100)).toFixed(2)} \n        onInputCapture = {this.changeBalanceForSavings}\n        /></td>\n      </tr>\n            \n        <tr><td><label>Savings For:</label></td>\n         <td> <input name=\"savingsFor\"\n        value={this.state.savingsFor} onChange={this.changeSavingsForHandler}/></td>\n        </tr> \n      \n        <tr>\n         <td> <div><label>Estimated Cost/Invest:</label></div></td>\n         <td> <input name=\"estimatedCost\"\n        value={this.state.estimatedCost} onChange={this.changeEstimatedCostHandler}/></td>\n      </tr>  \n\n         <tr> \n         <td><label>Monthly Savings:</label></td>\n         <td> <input readOnly name=\"monthlySavings\"\n        value={parseFloat(this.state.estimatedCost/12).toFixed(2)}/></td>\n      </tr>\n      </table>\n     </form>\n    </Card.Text>\n    \n  </Card.Body>\n : null}\n</Card>\n\n\n\n<Card>\n  <Card.Header as=\"h5\">Investment Details\n  </Card.Header>\n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n      <tr>\n         <td> <label>Total amount for Investment:</label></td>\n         <td> <input name=\"totAmtForInvest\"\n        value={this.props.customerAmtForInvest} onChange={this.changeTotAmtForInvest}/></td>\n      </tr>\n      <tr>\n         <td> <label>Balance Investment amount :</label></td>\n         <td> <input readOnly name=\"balance\"\n        value={parseFloat(((this.props.customerAmtForInvest)-((this.props.customerAmtForInvest)*(this.state.percentToPay)/100) - this.state.estimatedCost)).toFixed(2)} \n        /></td>\n      </tr>\n      <tr>\n        </tr>\n      </table>\n     </form>\n    </Card.Text>\n    \n  </Card.Body>\n</Card>\n\n<div>\n<button  className=\"btn btn-primary\" onClick={this.saveInvestmentDetails}>Save</button>\n<button  className=\"btn btn-primary m-2\" onClick={()=>this.props.getGoalMethod(this.state.lowRiskGoal)}>Submit</button>\n</div>\n \n </div>         \n             \n         );\n    }\n}\n \nexport default LowRiskGoalsComponent;","/Users/priyamanoj/online-investment-app/src/components/MediumRiskGoalComponent.jsx",["140","141"],"import React, { Component } from 'react';\nimport { Card} from 'react-bootstrap';\nimport CustomerService from '../services/CustomerService';\nclass DisabilityInvestmentComponent extends Component {\n    state = {\n        customerName: '',\n        customerAge: '',\n        annualIncome: '',\n        amtForInvestment: '',\n        taxPercent:'',\n        afterTaxAI:'',\n        employerPercent:'',\n        customerPercent:'',\n        amtContribByEmployer:'',\n        amtContribByCustomer:'',\n        disabilitySavings:'',\n        mediumRiskGoal:[]\n      }\n\n      changeCustomerNameHandler = (e)=>{\n        this.setState({customerName : e.target.value});\n    }\n    changeCustomerAgeHandler = (e)=>{\n        this.setState({customerAge : e.target.value});\n    }\n    changeAnnualIncomeHandler = (e)=>{\n        this.setState({annualIncome : e.target.value});\n    }\n    changeTaxPercent = (e) =>{\n        this.setState({taxPercent : e.target.value })\n    }\n    changeAfterTaxAI = (e) =>{\n      // this.setState({afterTaxAI :(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100)})\n      return (this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100);\n       console.log(\"AfterTAxAI\"+this.state.afterTaxAI)\n    }\n    changeEmployerPercent = (e) =>{\n        this.setState({employerPercent: e.target.value})\n    }\n    changeCustomerPercent = (e)=>{\n        this.setState({customerPercent: e.target.value})\n    }\n    \n\n    saveInvestmentDetails=()=>{\n       this.state.mediumRiskGoal = {\n        customerName: this.state.customerName, \n        customerAge: this.state.customerAge, \n        annualIncome: this.state.annualIncome,  \n          taxPercent: this.state.taxPercent,\n          employerPercent: this.state.employerPercent,\n          amtContribByEmployer: parseFloat((this.state.employerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100).toFixed(2),\n          customerPercent: this.state.customerPercent,\n          amtContribByCustomer: parseFloat((this.state.customerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100).toFixed(2),\n          disabilitySavings: parseFloat(((this.state.employerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100 +\n          (this.state.customerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100)).toFixed(2)\n       \n       \n     };\n  //  console.log(JSON.stringify(this.state.lowRiskGoal));\n     console.log(JSON.stringify(this.state.mediumRiskGoal))\n      CustomerService.createCustomerForMedRisk(this.state.mediumRiskGoal).then( response =>{\n        } );\n\n    }\n\n    render() { \n        return (\n            <div>\n                <h1>Medium Risk</h1>\n                <Card>\n                 <Card.Header as=\"h5\">Customer Information  \n  </Card.Header>\n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n            \n        <tr><td><label>Customer Name:</label></td>\n         <td> <input name=\"customerName\"\n        value={this.state.customerName} onChange={this.changeCustomerNameHandler}/></td>\n        </tr> \n      \n        <tr>\n         <td> <div><label>Age:</label></div></td>\n         <td> <input name=\"customerAge\"\n        value={this.state.customerAge} onChange={this.changeCustomerAgeHandler}/></td>\n      </tr>\n  \n         <tr> \n         <td><label>Annual Income:</label></td>\n         <td> <input name=\"annualIncome\"\n        value={this.state.annualIncome} onChange={this.changeAnnualIncomeHandler}/></td>\n      </tr>\n     \n      </table>\n     </form>\n    </Card.Text>\n    \n  </Card.Body>\n</Card>\n<div>\n<Card>\n  <Card.Header as=\"h5\">Disability Goal\n  </Card.Header>\n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n            <tr>\n         <td> <label>Annual Income:</label></td>\n         <td> <input readOnly name=\"annualIncome\"\n        value={this.state.annualIncome} \n        /></td>\n      </tr>\n            \n        <tr><td><label>Tax percentage %:</label></td>\n         <td> <input name=\"taxPercent\"\n        value={this.state.taxPercent} onChange={this.changeTaxPercent}/></td>\n        </tr> \n      \n        <tr>\n         <td> <div><label>After Tax Annual Income:</label></div></td>\n         <td> <input readOnly name=\"afterTaxAI\"\n        value={parseFloat((this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100)).toFixed(2)} /></td>\n      </tr>  \n      <tr>\n          <div>\n              <br></br>\n             <b>Note: You are eligible for disability savings for the maximum amount of {(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100)}</b> \n          </div>\n      </tr>\n\n         \n         <div><label>Employer Coverage:</label></div>\n         <div>\n             <tr>\n             <td><label>Percentage Employer would contribute</label></td>\n             <td><input name=\"employerPercent\"\n        value={this.state.employerPercent} onChange={this.changeEmployerPercent}/></td>\n             </tr>\n             <tr>\n                 <td><label>Amount contribution by Employer:</label></td>\n                 <td> <input readOnly name=\"empAmt\"\n        value={parseFloat((this.state.employerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100).toFixed(2)} /></td>\n                 \n             </tr>\n             </div>\n\n             <div>\n                <tr>\n                    <td><label>Percentage you like to contribute </label></td>\n                    <td><input name=\"customerPercent\"\n        value={this.state.customerPercent} onChange={this.changeCustomerPercent}/></td>\n             </tr>\n             <tr>\n                 <td><label>Amount you contributed</label></td>\n                 <td> <input readOnly name=\"empAmt\"\n        value={parseFloat((this.state.customerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100).toFixed(2)} /></td>\n                 \n             </tr>\n                    \n             </div>\n             <div>\n                 <label>Your total Disability Contribution Savings is {\n                      \n                     parseFloat(((this.state.employerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100 +\n                     (this.state.customerPercent*(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/100)).toFixed(2)\n                    \n                     \n                     } </label>\n             </div>\n         \n            \n      </table>\n     </form>\n    </Card.Text>\n    \n  </Card.Body>\n</Card>\n</div>\n<div>\n<button  className=\"btn btn-primary\" onClick={this.saveInvestmentDetails} >Submit</button>\n</div>\n              \n            </div>\n            \n            \n            );\n    \n    }\n}\n \nexport default DisabilityInvestmentComponent;","/Users/priyamanoj/online-investment-app/src/transitions/fadeTransition.jsx",["142"],"import React from \"react\";\n\nimport Transition from \"react-transition-group/Transition\";\n\nexport default class FadeTransition extends React.Component {\n\n  constructor(props) {\n    super(props);\n    //Default Style\n    this.defaultStyle = {\n      transitionProperty: \"opacity\",\n      transition: `${this.props.duration}ms ease-in-out`\n    };\n    this.transitionStyle = {\n      entering: {\n        opacity: \"0\"\n      },\n      entered: {\n        opacity: \"1\",\n        transitionDelay: \"700ms\"\n      },\n      exiting: {\n        opacity: \"0\"\n      },\n      exited: {\n        opacity: \"0\"\n      }\n    };\n  }\n\n  render() {\n\n    return (\n      <Transition in={this.props.isOpen} timeout={this.props.duration}>\n        {(state) => {\n          if (state == \"exited\") \n            return null;\n          return React\n            .Children\n            .map(this.props.children, (child, idx) => {\n              return React.cloneElement(child, {\n                style: Object.assign({}, this.defaultStyle, this.transitionStyle[state])\n              });\n            });\n        }}\n      </Transition>\n    );\n\n  }\n\n}","/Users/priyamanoj/online-investment-app/src/components/CustomerLoginComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/FAGenerateReport.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/LoginBoxComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/RegisterBoxComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/HomeComponent.jsx",["143","144","145"],"import React, { Component } from 'react';\nclass HomeComponent extends Component {\n    state = {  }\n\n    onClickAdminBtn=()=>{\n        this.props.history.push(\"/online_investment_banking/getFAlist\")\n    }\n\n    onClickCustomerBtn=()=>{\n        this.props.history.push(\"/online_investment_banking/loginCustomer\")\n    }\n    onClickFinAdvisorBtn=()=>{\n        this.props.history.push(\"/online_investment_banking/generateReportByFA\")\n    }\n    render() { \n        return ( <div>\n            <div align=\"center\">\n            <img alt=\"admin page logo\"  src=\"https://1.bp.blogspot.com/-e45ugM-ZbGA/Um6WUbwzcmI/AAAAAAAAA9U/NncJdLn-jh4/s1600/admin+page.jpg\"/>\n           \n            <div>\n                <button className = \"btn btn-info\" onClick={this.onClickAdminBtn}>Admin</button>\n            </div>\n            <br></br>\n            <div>\n            <img src=\"https://cdn2.iconfinder.com/data/icons/user-23/512/User_Customers.png\" width=\"130\" height=\"130\" />\n            </div>\n            <br></br>\n            <div>\n                <button className = \"btn btn-info\" onClick={this.onClickCustomerBtn}>Customer</button>\n            </div>\n             <br></br>\n             <br></br>\n            <div>\n            <img src=\"https://www.flaticon.com/premium-icon/icons/svg/3051/3051070.svg\" width=\"224\" height=\"224\" alt=\"Financial advisor icon\"  width=\"130\" height=\"130\" />\n            </div>\n            <br></br>\n            <div>\n                <button className = \"btn btn-info\" onClick={this.onClickFinAdvisorBtn}>Financial Advisor</button>\n            </div>\n            </div>\n        </div> );\n    }\n}\n \nexport default HomeComponent;","/Users/priyamanoj/online-investment-app/src/components/AboutUsComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/ContactUsComponent.jsx",[],"/Users/priyamanoj/online-investment-app/src/components/HighRiskComponent.jsx",["146"],"import React, { Component } from 'react';\nimport { Card} from 'react-bootstrap';\nimport CustomerService from '../services/CustomerService';\nclass HighRiskComponent extends Component {\n    state = { \n        customerName: '',\n        customerAge: '',\n        annualIncome: '',\n        coverAfterTaxIncome:'',\n        taxPercent:'',\n        addExpenses:'',\n        afterTaxAI:'',\n        monthlyAfterTaxIncome:'',\n        total:'',\n        highRiskGoal:[]\n     }\n\n     changeCustomerNameHandler = (e)=>{\n        this.setState({customerName : e.target.value});\n    }\n    changeCustomerAgeHandler = (e)=>{\n        this.setState({customerAge : e.target.value});\n    }\n    changeAnnualIncomeHandler = (e)=>{\n        this.setState({annualIncome : e.target.value});\n    }\n    changeTaxPercent=(e)=>{\n        this.setState({taxPercent : e.target.value});\n    }\n    changeCoverAfterTaxIncome=(e)=>{\n        this.setState({coverAfterTaxIncome : e.target.value});\n    }\n    changeAddExpenses=(e)=>{\n        this.setState({addExpenses : e.target.value});\n        console.log(this.state.addExpenses);\n    }\n\n    saveInvestmentDetails=()=>{\n     this.state.highRiskGoal ={\n        customerName: this.state.customerName,\n        customerAge: this.state.customerAge,\n        annualIncome: this.state.annualIncome,\n        coverAfterTaxIncome:this.state.coverAfterTaxIncome,\n        taxPercent:this.state.taxPercent,\n        addExpenses:this.state.addExpenses,\n        afterTaxAI:(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100),\n        monthlyAfterTaxIncome: parseFloat(((this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/12).toFixed(2),\n        total:parseFloat(((this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/12*this.state.coverAfterTaxIncome + (+this.state.addExpenses)).toFixed(2)\n         }\n         console.log(JSON.stringify(this.state.highRiskGoal))\n      CustomerService.createCustomerForHighRisk(this.state.highRiskGoal).then((res)=>{\n\n      })\n\n    }\n    render() { \n        return ( <div>\n          <h1>High Risk</h1>\n                <Card>\n                 <Card.Header as=\"h5\">Customer Information  \n  </Card.Header>\n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n            \n        <tr><td><label>Customer Name:</label></td>\n         <td> <input name=\"customerName\"\n        value={this.state.customerName} onChange={this.changeCustomerNameHandler}/></td>\n        </tr> \n      \n        <tr>\n         <td> <div><label>Age:</label></div></td>\n         <td> <input name=\"customerAge\"\n        value={this.state.customerAge} onChange={this.changeCustomerAgeHandler}/></td>\n      </tr>\n  \n         <tr> \n         <td><label>Annual Income:</label></td>\n         <td> <input name=\"annualIncome\"\n        value={this.state.annualIncome} onChange={this.changeAnnualIncomeHandler}/></td>\n      </tr>\n     \n      </table>\n     </form>\n    </Card.Text>\n    \n  </Card.Body>\n</Card>\n<div>\n<Card>\n  <Card.Header as=\"h5\">Emergency Cash\n  </Card.Header>\n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n            <tr>\n         <td> <label>Annual pre-tax income:</label></td>\n         <td> <input readOnly name=\"annualIncome\"\n        value={this.state.annualIncome} \n        /></td>\n      </tr>\n            \n        <tr><td><label>Effective Tax percentage %:</label></td>\n         <td> <input name=\"taxPercent\"\n        value={this.state.taxPercent} onChange={this.changeTaxPercent}/></td>\n        </tr> \n      \n        <tr>\n         <td> <div><label>After Tax Annual Income:</label></div></td>\n         <td> <input readOnly name=\"afterTaxAI\"\n        value={(this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100)} /></td>\n      </tr>  \n      <tr>\n         <td> <div><label>Monthly After Tax Income:</label></div></td>\n         <td> <input readOnly name=\"monthlyAfterTaxIncome\"\n        value={parseFloat(((this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/12).toFixed(2)} /></td>\n      </tr> \n      <tr>\n      </tr>\n                \n      </table>\n     </form>\n      </Card.Text>\n    \n    </Card.Body>\n  </Card>\n  <Card>\n  <Card.Header as=\"h5\">Goal\n  </Card.Header>\n  <Card.Body>\n    <Card.Text>\n        <form>\n            <table>\n         <div>\n             <tr>\n             <td><label>Cover after-tax income for:</label></td>\n             <td><input name=\"coverAfterTaxIncome\"\n        value={this.state.coverAfterTaxIncome} onChange={this.changeCoverAfterTaxIncome}/></td>\n        <td><label>months</label></td>\n             </tr>\n             <tr>\n                 <td><label>Additional expenses:</label></td>\n                 <td> <input name=\"addExpenses\"\n        value={(this.state.addExpenses)} onChange={this.changeAddExpenses} /></td>\n                 \n             </tr>\n             <tr>\n                 <td><label>Total needed:{parseFloat(((this.state.annualIncome - (this.state.taxPercent*this.state.annualIncome)/100))/12*this.state.coverAfterTaxIncome + (+this.state.addExpenses)).toFixed(2)}</label></td>\n                 \n                 \n             </tr>        \n         </div>      \n      </table>\n     </form>\n     </Card.Text>\n    \n    </Card.Body>\n  </Card>\n</div>\n<div>\n<button  className=\"btn btn-primary\" onClick={this.saveInvestmentDetails} >Submit</button>\n</div>\n\n        </div> );\n    }\n}\n \nexport default HighRiskComponent;",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":8,"nodeType":"153","messageId":"154","endLine":1,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":31,"column":9,"nodeType":"157","endLine":31,"endColumn":19},{"ruleId":"151","severity":1,"message":"158","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":31},{"ruleId":"155","severity":1,"message":"156","line":35,"column":8,"nodeType":"157","endLine":35,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":41,"column":8,"nodeType":"157","endLine":41,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":47,"column":12,"nodeType":"157","endLine":47,"endColumn":22},{"ruleId":"151","severity":1,"message":"159","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":30},{"ruleId":"155","severity":1,"message":"156","line":36,"column":8,"nodeType":"157","endLine":36,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":26,"column":16,"nodeType":"162","messageId":"163","endLine":26,"endColumn":35,"fix":"164"},{"ruleId":"160","severity":1,"message":"161","line":11,"column":16,"nodeType":"162","messageId":"163","endLine":11,"endColumn":40,"fix":"165"},{"ruleId":"147","replacedBy":"166"},{"ruleId":"149","replacedBy":"167"},{"ruleId":"147","replacedBy":"168"},{"ruleId":"149","replacedBy":"169"},{"ruleId":"151","severity":1,"message":"170","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":28},{"ruleId":"151","severity":1,"message":"171","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":23},{"ruleId":"172","severity":1,"message":"173","line":28,"column":10,"nodeType":"174","messageId":"175","endLine":28,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":98,"column":10,"nodeType":"157","endLine":98,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":35,"column":8,"nodeType":"178","messageId":"179","endLine":35,"endColumn":55},{"ruleId":"155","severity":1,"message":"156","line":46,"column":8,"nodeType":"157","endLine":46,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":36,"column":21,"nodeType":"182","messageId":"175","endLine":36,"endColumn":23},{"ruleId":"183","severity":1,"message":"184","line":25,"column":13,"nodeType":"185","endLine":25,"endColumn":121},{"ruleId":"186","severity":1,"message":"187","line":34,"column":144,"nodeType":"188","endLine":34,"endColumn":155},{"ruleId":"186","severity":1,"message":"187","line":34,"column":156,"nodeType":"188","endLine":34,"endColumn":168},{"ruleId":"155","severity":1,"message":"156","line":39,"column":6,"nodeType":"157","endLine":39,"endColumn":16},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'DialogFragmentComponent' is defined but never used.","'EducationGoalComponent' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"191","text":"192"},{"range":"193","text":"192"},["189"],["190"],["189"],["190"],"'EducationGoalService' is defined but never used.","'CustomerService' is defined but never used.","no-dupe-keys","Duplicate key 'balance'.","ObjectExpression","unexpected","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",[935,935],"()",[296,296]]